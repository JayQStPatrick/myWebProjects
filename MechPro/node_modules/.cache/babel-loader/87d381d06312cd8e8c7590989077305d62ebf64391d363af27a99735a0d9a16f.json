{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\ReactClass\\\\mech-pro\\\\src\\\\components\\\\navpages\\\\signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Navbar from \"../../navbar\";\nimport googleLogo from \"../assets/googlemain.png\";\nimport Footer from \"./footer\";\nimport axios from \"axios\";\nimport Signupform from \"./signupform\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const sendDataToDatabase = async formData => {\n    try {\n      // Make a POST request to your API endpoint\n      const response = await axios.post(\"http://your-api-endpoint\", formData);\n      console.log(\"Data sent successfully:\", response.data);\n      // Handle success, update UI, etc.\n    } catch (error) {\n      console.error(\"Error sending data:\", error);\n      // Handle errors, show error messages, etc.\n    }\n  };\n\n  const [database, setDatabase] = useState([]);\n  useEffect(() => {\n    // Make a GET request\n    axios.post(\"http://127.0.0.1:8000/api/user/register\").then(response => {\n      // Handle the data from the response\n      console.log(response);\n      setDatabase(response.data);\n    }).catch(error => {\n      // Handle errors\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []); // Empty dependency array ensures useEffect runs once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Signupform, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"CChOX7E5ASxYoqkCBlnaqYlcvxY=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","googleLogo","Footer","axios","Signupform","jsxDEV","_jsxDEV","Signup","_s","sendDataToDatabase","formData","response","post","console","log","data","error","database","setDatabase","then","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/ReactClass/mech-pro/src/components/navpages/signup.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"../../navbar\";\r\nimport googleLogo from \"../assets/googlemain.png\";\r\nimport Footer from \"./footer\";\r\nimport axios from \"axios\";\r\nimport Signupform from \"./signupform\";\r\n\r\nconst Signup = () => {\r\n  const sendDataToDatabase = async (formData) => {\r\n    try {\r\n      // Make a POST request to your API endpoint\r\n      const response = await axios.post(\"http://your-api-endpoint\", formData);\r\n      console.log(\"Data sent successfully:\", response.data);\r\n      // Handle success, update UI, etc.\r\n    } catch (error) {\r\n      console.error(\"Error sending data:\", error);\r\n      // Handle errors, show error messages, etc.\r\n    }\r\n  };\r\n\r\n  const [database, setDatabase] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Make a GET request\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/user/register\")\r\n      .then((response) => {\r\n        // Handle the data from the response\r\n        console.log(response);\r\n        setDatabase(response.data);\r\n      })\r\n      .catch((error) => {\r\n        // Handle errors\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, []); // Empty dependency array ensures useEffect runs once on component mount\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Signupform />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;IAC7C,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;MACvEG,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MACrD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C;IACF;EACF,CAAC;;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACAK,KAAK,CACFS,IAAI,CAAC,yCAAyC,CAAC,CAC/CO,IAAI,CAAER,QAAQ,IAAK;MAClB;MACAE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrBO,WAAW,CAACP,QAAQ,CAACI,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDK,KAAK,CAAEJ,KAAK,IAAK;MAChB;MACAH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEV,OAAA;IAAAe,QAAA,gBACEf,OAAA,CAACN,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVnB,OAAA,CAACF,UAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdnB,OAAA,CAACJ,MAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACjB,EAAA,CArCID,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AAuCZ,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}